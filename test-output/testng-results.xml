<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="4" ignored="4" total="30" passed="22" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-01T10:04:14 SAST" name="SwaggerAPISuite" finished-at="2025-10-01T10:05:15 SAST" duration-ms="61398">
    <groups>
      <group name="UploadPetImage">
        <method signature="PetTest.testUploadPetImage()[pri:5, instance:api.test.PetTest@38d8f54a]" name="testUploadPetImage" class="api.test.PetTest"/>
      </group> <!-- UploadPetImage -->
      <group name="BatchUsers">
        <method signature="UserTest.testCreateUsersWithList()[pri:5, instance:api.test.UserTest@1f59a598]" name="testCreateUsersWithList" class="api.test.UserTest"/>
        <method signature="UserTest.testCreateUsersWithArray()[pri:6, instance:api.test.UserTest@1f59a598]" name="testCreateUsersWithArray" class="api.test.UserTest"/>
      </group> <!-- BatchUsers -->
      <group name="AddPet">
        <method signature="PetTest.testPetName()[pri:1, instance:api.test.PetTest@38d8f54a]" name="testPetName" class="api.test.PetTest"/>
        <method signature="PetTest.testPetCategory()[pri:2, instance:api.test.PetTest@38d8f54a]" name="testPetCategory" class="api.test.PetTest"/>
        <method signature="PetTest.testPetTags()[pri:3, instance:api.test.PetTest@38d8f54a]" name="testPetTags" class="api.test.PetTest"/>
        <method signature="PetTest.testPetStatus()[pri:4, instance:api.test.PetTest@38d8f54a]" name="testPetStatus" class="api.test.PetTest"/>
      </group> <!-- AddPet -->
      <group name="UpdatePetFormData">
        <method signature="PetTest.testUpdatePetWithFormData()[pri:9, instance:api.test.PetTest@38d8f54a]" name="testUpdatePetWithFormData" class="api.test.PetTest"/>
      </group> <!-- UpdatePetFormData -->
      <group name="ListPetById">
        <method signature="PetTest.testListPetById()[pri:8, instance:api.test.PetTest@38d8f54a]" name="testListPetById" class="api.test.PetTest"/>
      </group> <!-- ListPetById -->
      <group name="DeletPetById">
        <method signature="PetTest.testDeletePetById()[pri:10, instance:api.test.PetTest@38d8f54a]" name="testDeletePetById" class="api.test.PetTest"/>
      </group> <!-- DeletPetById -->
      <group name="PlaceOrder">
        <method signature="StoreTest.testPlaceOrder()[pri:1, instance:api.test.StoreTest@445b295b]" name="testPlaceOrder" class="api.test.StoreTest"/>
      </group> <!-- PlaceOrder -->
      <group name="ListOrderByInventory">
        <method signature="StoreTest.testGetOrderInventory()[pri:3, instance:api.test.StoreTest@445b295b]" name="testGetOrderInventory" class="api.test.StoreTest"/>
      </group> <!-- ListOrderByInventory -->
      <group name="UpdatePet">
        <method signature="PetTest.testUpdatePetNameAndTags()[pri:6, instance:api.test.PetTest@38d8f54a]" name="testUpdatePetNameAndTags" class="api.test.PetTest"/>
      </group> <!-- UpdatePet -->
      <group name="Auth">
        <method signature="UserTest.testUserLogin()[pri:7, instance:api.test.UserTest@1f59a598]" name="testUserLogin" class="api.test.UserTest"/>
        <method signature="UserTest.testUserLogout()[pri:8, instance:api.test.UserTest@1f59a598]" name="testUserLogout" class="api.test.UserTest"/>
      </group> <!-- Auth -->
      <group name="ListPetsByStatus">
        <method signature="PetTest.testListPetsByStatus()[pri:7, instance:api.test.PetTest@38d8f54a]" name="testListPetsByStatus" class="api.test.PetTest"/>
      </group> <!-- ListPetsByStatus -->
      <group name="ListOrderById">
        <method signature="StoreTest.testGetOrderById()[pri:2, instance:api.test.StoreTest@445b295b]" name="testGetOrderById" class="api.test.StoreTest"/>
      </group> <!-- ListOrderById -->
      <group name="HappyPath">
        <method signature="UserTest.testCreateNewUser()[pri:1, instance:api.test.UserTest@1f59a598]" name="testCreateNewUser" class="api.test.UserTest"/>
        <method signature="UserTest.testGetExistingUser()[pri:2, instance:api.test.UserTest@1f59a598]" name="testGetExistingUser" class="api.test.UserTest"/>
        <method signature="UserTest.testUpdateExistingUser()[pri:3, instance:api.test.UserTest@1f59a598]" name="testUpdateExistingUser" class="api.test.UserTest"/>
        <method signature="UserTest.testDeleteExistingUser()[pri:4, instance:api.test.UserTest@1f59a598]" name="testDeleteExistingUser" class="api.test.UserTest"/>
      </group> <!-- HappyPath -->
      <group name="DeleteByOrderId">
        <method signature="StoreTest.testDeleteByOrderId()[pri:4, instance:api.test.StoreTest@445b295b]" name="testDeleteByOrderId" class="api.test.StoreTest"/>
      </group> <!-- DeleteByOrderId -->
    </groups>
    <test started-at="2025-10-01T10:04:14 SAST" name="SwaggerAPIRegression" finished-at="2025-10-01T10:05:15 SAST" duration-ms="61398">
      <class name="api.test.PetTest">
        <test-method is-config="true" signature="setupPet()[pri:0, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:24 SAST" name="setupPet" finished-at="2025-10-01T10:04:27 SAST" duration-ms="3704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupPet -->
        <test-method signature="testPetName()[pri:1, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:28 SAST" name="testPetName" finished-at="2025-10-01T10:04:28 SAST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetName -->
        <test-method signature="testPetCategory()[pri:2, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:35 SAST" name="testPetCategory" finished-at="2025-10-01T10:04:35 SAST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetCategory -->
        <test-method signature="testPetTags()[pri:3, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:36 SAST" name="testPetTags" finished-at="2025-10-01T10:04:37 SAST" duration-ms="752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetTags -->
        <test-method signature="testPetStatus()[pri:4, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:47 SAST" name="testPetStatus" finished-at="2025-10-01T10:04:47 SAST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetStatus -->
        <test-method signature="testUploadPetImage()[pri:5, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:49 SAST" name="testUploadPetImage" depends-on-groups="AddPet" finished-at="2025-10-01T10:04:53 SAST" duration-ms="4512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadPetImage -->
        <test-method signature="testUpdatePetNameAndTags()[pri:6, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:55 SAST" name="testUpdatePetNameAndTags" depends-on-groups="UploadPetImage" finished-at="2025-10-01T10:04:56 SAST" duration-ms="1257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetNameAndTags -->
        <test-method signature="testListPetsByStatus()[pri:7, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:56 SAST" name="testListPetsByStatus" depends-on-groups="UpdatePet" finished-at="2025-10-01T10:04:57 SAST" duration-ms="1174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListPetsByStatus -->
        <test-method signature="testListPetById()[pri:8, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:04:59 SAST" name="testListPetById" depends-on-groups="ListPetsByStatus" finished-at="2025-10-01T10:05:01 SAST" duration-ms="2278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListPetById -->
        <test-method signature="testUpdatePetWithFormData()[pri:9, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:05:02 SAST" name="testUpdatePetWithFormData" depends-on-groups="ListPetById" finished-at="2025-10-01T10:05:03 SAST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetWithFormData -->
        <test-method retried="true" signature="testDeletePetById()[pri:10, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:05:03 SAST" name="testDeletePetById" depends-on-groups="UpdatePetFormData" finished-at="2025-10-01T10:05:08 SAST" duration-ms="4643" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [404] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [404] but found [200]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at api.test.PetTest.testDeletePetById(PetTest.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePetById -->
        <test-method signature="testDeletePetById()[pri:10, instance:api.test.PetTest@38d8f54a]" started-at="2025-10-01T10:05:08 SAST" name="testDeletePetById" depends-on-groups="UpdatePetFormData" finished-at="2025-10-01T10:05:15 SAST" duration-ms="7615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePetById -->
      </class> <!-- api.test.PetTest -->
      <class name="api.test.UserTest">
        <test-method is-config="true" signature="setupSingleUserData()[pri:0, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:15 SAST" name="setupSingleUserData" finished-at="2025-10-01T10:04:16 SAST" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSingleUserData -->
        <test-method signature="testCreateNewUser()[pri:1, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:16 SAST" name="testCreateNewUser" finished-at="2025-10-01T10:04:24 SAST" duration-ms="7840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewUser -->
        <test-method retried="true" signature="testGetExistingUser()[pri:2, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:31 SAST" name="testGetExistingUser" finished-at="2025-10-01T10:04:32 SAST" duration-ms="1304" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failed to fetch existing user! expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failed to fetch existing user! expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at api.test.UserTest.testGetExistingUser(UserTest.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetExistingUser -->
        <test-method signature="testGetExistingUser()[pri:2, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:32 SAST" name="testGetExistingUser" finished-at="2025-10-01T10:04:33 SAST" duration-ms="1184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetExistingUser -->
        <test-method signature="testUpdateExistingUser()[pri:3, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:37 SAST" name="testUpdateExistingUser" finished-at="2025-10-01T10:04:40 SAST" duration-ms="2654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingUser -->
        <test-method signature="testDeleteExistingUser()[pri:4, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:46 SAST" name="testDeleteExistingUser" finished-at="2025-10-01T10:04:47 SAST" duration-ms="1266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteExistingUser -->
        <test-method is-config="true" signature="setupBatchUsers()[pri:0, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:47 SAST" name="setupBatchUsers" finished-at="2025-10-01T10:04:47 SAST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBatchUsers -->
        <test-method signature="testCreateUsersWithList()[pri:5, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:47 SAST" name="testCreateUsersWithList" finished-at="2025-10-01T10:04:49 SAST" duration-ms="1547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUsersWithList -->
        <test-method signature="testCreateUsersWithArray()[pri:6, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:53 SAST" name="testCreateUsersWithArray" finished-at="2025-10-01T10:04:55 SAST" duration-ms="1509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUsersWithArray -->
        <test-method signature="testUserLogin()[pri:7, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:57 SAST" name="testUserLogin" finished-at="2025-10-01T10:04:59 SAST" duration-ms="1188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin -->
        <test-method is-config="true" signature="setupLoginUser()[pri:0, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:04:57 SAST" name="setupLoginUser" finished-at="2025-10-01T10:04:57 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLoginUser -->
        <test-method signature="testUserLogout()[pri:8, instance:api.test.UserTest@1f59a598]" started-at="2025-10-01T10:05:01 SAST" name="testUserLogout" finished-at="2025-10-01T10:05:02 SAST" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogout -->
      </class> <!-- api.test.UserTest -->
      <class name="api.test.StoreTest">
        <test-method is-config="true" signature="setupStore()[pri:0, instance:api.test.StoreTest@445b295b]" started-at="2025-10-01T10:04:28 SAST" name="setupStore" finished-at="2025-10-01T10:04:30 SAST" duration-ms="2738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupStore -->
        <test-method signature="testPlaceOrder()[pri:1, instance:api.test.StoreTest@445b295b]" started-at="2025-10-01T10:04:30 SAST" name="testPlaceOrder" finished-at="2025-10-01T10:04:31 SAST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceOrder -->
        <test-method signature="testGetOrderById()[pri:2, instance:api.test.StoreTest@445b295b]" started-at="2025-10-01T10:04:33 SAST" name="testGetOrderById" depends-on-groups="PlaceOrder" finished-at="2025-10-01T10:04:35 SAST" duration-ms="2004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrderById -->
        <test-method signature="testGetOrderInventory()[pri:3, instance:api.test.StoreTest@445b295b]" started-at="2025-10-01T10:04:35 SAST" name="testGetOrderInventory" depends-on-groups="ListOrderById" finished-at="2025-10-01T10:04:36 SAST" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrderInventory -->
        <test-method retried="true" signature="testDeleteByOrderId()[pri:4, instance:api.test.StoreTest@445b295b]" started-at="2025-10-01T10:04:40 SAST" name="testDeleteByOrderId" depends-on-groups="ListOrderByInventory" finished-at="2025-10-01T10:04:42 SAST" duration-ms="2554" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [404] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [404] but found [200]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at api.test.StoreTest.testDeleteByOrderId(StoreTest.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteByOrderId -->
        <test-method retried="true" signature="testDeleteByOrderId()[pri:4, instance:api.test.StoreTest@445b295b]" started-at="2025-10-01T10:04:42 SAST" name="testDeleteByOrderId" depends-on-groups="ListOrderByInventory" finished-at="2025-10-01T10:04:44 SAST" duration-ms="1162" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at api.test.StoreTest.testDeleteByOrderId(StoreTest.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:249)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteByOrderId -->
        <test-method signature="testDeleteByOrderId()[pri:4, instance:api.test.StoreTest@445b295b]" started-at="2025-10-01T10:04:44 SAST" name="testDeleteByOrderId" depends-on-groups="ListOrderByInventory" finished-at="2025-10-01T10:04:46 SAST" duration-ms="2374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteByOrderId -->
      </class> <!-- api.test.StoreTest -->
    </test> <!-- SwaggerAPIRegression -->
  </suite> <!-- SwaggerAPISuite -->
</testng-results>
