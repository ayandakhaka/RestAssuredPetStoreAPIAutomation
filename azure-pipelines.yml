# Trigger on main branch
trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  IMAGE_NAME: 'restassured-tests'
  IMAGE_TAG: '$(Build.BuildId)'
  DOCKER_REGISTRY: 'myregistry.azurecr.io'   # Change to your ACR or DockerHub registry

stages:
# 1️⃣ Build Stage
- stage: Build
  displayName: 'Build Docker Image'
  jobs:
    - job: Build
      steps:
        - checkout: self

        - task: Docker@2
          displayName: 'Build Docker Image'
          inputs:
            command: build
            repository: $(DOCKER_REGISTRY)/$(IMAGE_NAME)
            tags: |
              $(IMAGE_TAG)
            Dockerfile: '**/Dockerfile'

# 2️⃣ Test Stage
- stage: Test
  displayName: 'Run Tests inside Docker'
  dependsOn: Build
  jobs:
    - job: Test
      steps:
        - script: |
            echo "Running tests inside Docker..."
            docker run --rm $(DOCKER_REGISTRY)/$(IMAGE_NAME):$(IMAGE_TAG) \
              mvn clean test -DsuiteXmlFile=testng.xml
          displayName: 'Execute TestNG Tests'

        - task: PublishTestResults@2
          inputs:
            testResultsFiles: '**/target/surefire-reports/*.xml'
            testRunTitle: 'TestNG Results in Docker'
            mergeTestResults: true
            failTaskOnFailedTests: true

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: 'target/extent-reports'
            artifact: 'ExtentReports'
            publishLocation: 'pipeline'

# 3️⃣ Push Stage
- stage: Push
  displayName: 'Push Docker Image'
  dependsOn: Test
  condition: succeeded()
  jobs:
    - job: Push
      steps:
        # Log in to Azure Container Registry
        - task: Docker@2
          displayName: 'Login to ACR'
          inputs:
            command: login
            containerRegistry: 'MyACRServiceConnection' # Service connection in Azure DevOps

        - task: Docker@2
          displayName: 'Push Docker Image'
          inputs:
            command: push
            repository: $(DOCKER_REGISTRY)/$(IMAGE_NAME)
            tags: |
              latest
              $(IMAGE_TAG)
